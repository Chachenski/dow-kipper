{"ast":null,"code":"// import React from \"react\";\n// import { ResponsiveLine } from \"@nivo/line\";\n\n// const Linechart: React.FC = ({ data: chartData }) => {\n\n//   data = [\n//     {\n//       id: \"japan\",\n//       color: \"hsl(272, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 182,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 295,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 44,\n//         },\n//         {\n//           x: \"train\",\n//           y: 236,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 74,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 212,\n//         },\n//         {\n//           x: \"car\",\n//           y: 258,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 73,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 289,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 106,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 197,\n//         },\n//         {\n//           x: \"others\",\n//           y: 298,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"france\",\n//       color: \"hsl(240, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 104,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 39,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 16,\n//         },\n//         {\n//           x: \"train\",\n//           y: 157,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 189,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 50,\n//         },\n//         {\n//           x: \"car\",\n//           y: 34,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 254,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 261,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 29,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 272,\n//         },\n//         {\n//           x: \"others\",\n//           y: 208,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"us\",\n//       color: \"hsl(111, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 263,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 294,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 138,\n//         },\n//         {\n//           x: \"train\",\n//           y: 25,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 10,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 279,\n//         },\n//         {\n//           x: \"car\",\n//           y: 17,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 233,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 68,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 19,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 222,\n//         },\n//         {\n//           x: \"others\",\n//           y: 219,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"germany\",\n//       color: \"hsl(159, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 65,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 85,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 142,\n//         },\n//         {\n//           x: \"train\",\n//           y: 243,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 62,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 194,\n//         },\n//         {\n//           x: \"car\",\n//           y: 33,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 118,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 196,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 71,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 173,\n//         },\n//         {\n//           x: \"others\",\n//           y: 229,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"norway\",\n//       color: \"hsl(287, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 29,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 291,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 38,\n//         },\n//         {\n//           x: \"train\",\n//           y: 146,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 234,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 69,\n//         },\n//         {\n//           x: \"car\",\n//           y: 283,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 289,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 262,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 143,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 19,\n//         },\n//         {\n//           x: \"others\",\n//           y: 253,\n//         },\n//       ],\n//     },\n//   ];\n\n//   return (\n//     <div>\n//       <ResponsiveLine\n//         data={chartData}\n//         margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n//         xScale={{ type: \"point\" }}\n//         yScale={{\n//           type: \"linear\",\n//           min: \"auto\",\n//           max: \"auto\",\n//           stacked: true,\n//           reverse: false,\n//         }}\n//         yFormat=\" >-.2f\"\n//         axisTop={null}\n//         axisRight={null}\n//         axisBottom={{\n//           tickSize: 5,\n//           tickPadding: 5,\n//           tickRotation: 0,\n//           legend: \"transportation\",\n//           legendOffset: 36,\n//           legendPosition: \"middle\",\n//         }}\n//         axisLeft={{\n//           tickSize: 5,\n//           tickPadding: 5,\n//           tickRotation: 0,\n//           legend: \"count\",\n//           legendOffset: -40,\n//           legendPosition: \"middle\",\n//         }}\n//         pointSize={10}\n//         pointColor={{ theme: \"background\" }}\n//         pointBorderWidth={2}\n//         pointBorderColor={{ from: \"serieColor\" }}\n//         pointLabelYOffset={-12}\n//         useMesh={true}\n//         legends={[\n//           {\n//             anchor: \"bottom-right\",\n//             direction: \"column\",\n//             justify: false,\n//             translateX: 100,\n//             translateY: 0,\n//             itemsSpacing: 0,\n//             itemDirection: \"left-to-right\",\n//             itemWidth: 80,\n//             itemHeight: 20,\n//             itemOpacity: 0.75,\n//             symbolSize: 12,\n//             symbolShape: \"circle\",\n//             symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n//             effects: [\n//               {\n//                 on: \"hover\",\n//                 style: {\n//                   itemBackground: \"rgba(0, 0, 0, .03)\",\n//                   itemOpacity: 1,\n//                 },\n//               },\n//             ],\n//           },\n//         ]}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Linechart;","map":{"version":3,"names":[],"sources":["/Users/chachenski/Desktop/Capstone/dow-kipper-typescript/client/src/components/Linechart.tsx"],"sourcesContent":["// import React from \"react\";\n// import { ResponsiveLine } from \"@nivo/line\";\n\n// const Linechart: React.FC = ({ data: chartData }) => {\n\n//   data = [\n//     {\n//       id: \"japan\",\n//       color: \"hsl(272, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 182,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 295,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 44,\n//         },\n//         {\n//           x: \"train\",\n//           y: 236,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 74,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 212,\n//         },\n//         {\n//           x: \"car\",\n//           y: 258,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 73,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 289,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 106,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 197,\n//         },\n//         {\n//           x: \"others\",\n//           y: 298,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"france\",\n//       color: \"hsl(240, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 104,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 39,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 16,\n//         },\n//         {\n//           x: \"train\",\n//           y: 157,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 189,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 50,\n//         },\n//         {\n//           x: \"car\",\n//           y: 34,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 254,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 261,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 29,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 272,\n//         },\n//         {\n//           x: \"others\",\n//           y: 208,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"us\",\n//       color: \"hsl(111, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 263,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 294,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 138,\n//         },\n//         {\n//           x: \"train\",\n//           y: 25,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 10,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 279,\n//         },\n//         {\n//           x: \"car\",\n//           y: 17,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 233,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 68,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 19,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 222,\n//         },\n//         {\n//           x: \"others\",\n//           y: 219,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"germany\",\n//       color: \"hsl(159, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 65,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 85,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 142,\n//         },\n//         {\n//           x: \"train\",\n//           y: 243,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 62,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 194,\n//         },\n//         {\n//           x: \"car\",\n//           y: 33,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 118,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 196,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 71,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 173,\n//         },\n//         {\n//           x: \"others\",\n//           y: 229,\n//         },\n//       ],\n//     },\n//     {\n//       id: \"norway\",\n//       color: \"hsl(287, 70%, 50%)\",\n//       data: [\n//         {\n//           x: \"plane\",\n//           y: 29,\n//         },\n//         {\n//           x: \"helicopter\",\n//           y: 291,\n//         },\n//         {\n//           x: \"boat\",\n//           y: 38,\n//         },\n//         {\n//           x: \"train\",\n//           y: 146,\n//         },\n//         {\n//           x: \"subway\",\n//           y: 234,\n//         },\n//         {\n//           x: \"bus\",\n//           y: 69,\n//         },\n//         {\n//           x: \"car\",\n//           y: 283,\n//         },\n//         {\n//           x: \"moto\",\n//           y: 289,\n//         },\n//         {\n//           x: \"bicycle\",\n//           y: 262,\n//         },\n//         {\n//           x: \"horse\",\n//           y: 143,\n//         },\n//         {\n//           x: \"skateboard\",\n//           y: 19,\n//         },\n//         {\n//           x: \"others\",\n//           y: 253,\n//         },\n//       ],\n//     },\n//   ];\n\n//   return (\n//     <div>\n//       <ResponsiveLine\n//         data={chartData}\n//         margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n//         xScale={{ type: \"point\" }}\n//         yScale={{\n//           type: \"linear\",\n//           min: \"auto\",\n//           max: \"auto\",\n//           stacked: true,\n//           reverse: false,\n//         }}\n//         yFormat=\" >-.2f\"\n//         axisTop={null}\n//         axisRight={null}\n//         axisBottom={{\n//           tickSize: 5,\n//           tickPadding: 5,\n//           tickRotation: 0,\n//           legend: \"transportation\",\n//           legendOffset: 36,\n//           legendPosition: \"middle\",\n//         }}\n//         axisLeft={{\n//           tickSize: 5,\n//           tickPadding: 5,\n//           tickRotation: 0,\n//           legend: \"count\",\n//           legendOffset: -40,\n//           legendPosition: \"middle\",\n//         }}\n//         pointSize={10}\n//         pointColor={{ theme: \"background\" }}\n//         pointBorderWidth={2}\n//         pointBorderColor={{ from: \"serieColor\" }}\n//         pointLabelYOffset={-12}\n//         useMesh={true}\n//         legends={[\n//           {\n//             anchor: \"bottom-right\",\n//             direction: \"column\",\n//             justify: false,\n//             translateX: 100,\n//             translateY: 0,\n//             itemsSpacing: 0,\n//             itemDirection: \"left-to-right\",\n//             itemWidth: 80,\n//             itemHeight: 20,\n//             itemOpacity: 0.75,\n//             symbolSize: 12,\n//             symbolShape: \"circle\",\n//             symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n//             effects: [\n//               {\n//                 on: \"hover\",\n//                 style: {\n//                   itemBackground: \"rgba(0, 0, 0, .03)\",\n//                   itemOpacity: 1,\n//                 },\n//               },\n//             ],\n//           },\n//         ]}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Linechart;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}